{"version":3,"sources":["images/user.svg","components/Navbar/Navbar.module.css","api/api.js","redux/dialogs-reducer.ts","utils/objects-helpers.js","redux/users-reducer.ts","images/loader.svg","components/Profile/Profile.module.css","components/common/FormControls/FormControls.jsx","components/Navbar/Navbar.jsx","redux/profile-reducer.ts","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/auth-reducer.ts","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","utils/validators.js","components/common/Loader.jsx","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css"],"names":["module","exports","axiosInstance","require","default","create","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfileData","profile","authAPI","getMyProfile","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageText","type","dialogReducer","state","action","text","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","SET_USERS","FOLLOW","UNFOLLOW","users","totalUserCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","page","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","filter","FormControl","input","meta","touched","error","children","isError","className","styles","formControl","Textarea","props","Input","Navbar","classes","nav","list","to","link","activeClassName","active","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","setProfileStatus","getUserProfile","profileReducer","newPost","newPostText","photos","ProfileStatus","updateProfileStatus","useState","editMode","setEditMode","newStatus","setStatus","useEffect","onDoubleClick","onChange","e","value","target","autoFocus","onBlur","Contact","contactTitle","contactValue","href","ProfileData","isOwner","activateEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","ReduxProfileDataForm","reduxForm","form","handleSubmit","onSubmit","htmlFor","Field","component","rows","index","placeholder","ProfileInfo","onMainPicChange","files","length","fullName","src","large","userPic","width","initialValues","Loader","Post","maxPostLength","maxLength","PostFormRedux","validate","requiredField","MyPosts","React","memo","postElement","values","addPost","MyPostsContainer","connect","profilePage","Profile","profileContainer","ProfileContainer","this","refreshProfile","prevProps","match","params","authUserId","history","push","getProfileStatus","savePic","Component","compose","auth","isAuth","file","getState","stopSubmit","_error","Promise","reject","withRouter","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","Header","header","logo","loginBlock","HeaderContainer","ReduxLoginForm","alt","initialized","appReducer","createStore","combineReducers","applyMiddleware","store","dialogPage","usersPage","formReducer","app","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","News","Music","Settings","App","initializeApp","exact","from","path","render","AppContainer","promise","all","AppProvider","basename","process","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","undefined","loader"],"mappings":"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","file":"static/js/main.8ff78381.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.30101966.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2g0fr\",\"list\":\"Navbar_list__1h58q\",\"link\":\"Navbar_link__2Axr-\",\"active\":\"Navbar_active__23SR6\"};","const { default: Axios } = require(\"axios\");\r\n\r\nconst axiosInstance = Axios.create({\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"075321c3-51db-4d59-83c5-87a5d72d925f\",\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return axiosInstance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId) {\r\n    return axiosInstance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return axiosInstance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return axiosInstance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return axiosInstance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return axiosInstance.put(\"profile/status/\", { status });\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n\r\n    return axiosInstance.put(\"profile/photo/\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  saveProfileData(profile) {\r\n    return axiosInstance.put(\"profile\", profile);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  getMyProfile() {\r\n    return axiosInstance.get(\"auth/me\");\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return axiosInstance.post(\"auth/login\", {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n      captcha,\r\n    });\r\n  },\r\n  logout() {\r\n    return axiosInstance.delete(\"auth/login\");\r\n  },\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return axiosInstance.get(\"security/get-captcha-url\");\r\n  },\r\n};\r\n","const SEND_MESSAGE = \"react-01/dialogs/SEND-MESSAGE\";\r\n\r\ntype DialogType = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\ntype MessageType = {\r\n  id: number;\r\n  message: string;\r\n};\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Viktor\" },\r\n    { id: 2, name: \"Valentyn\" },\r\n    { id: 3, name: \"Lesia\" },\r\n    { id: 4, name: \"Julia\" },\r\n  ] as Array<DialogType>,\r\n\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"!\" },\r\n  ] as Array<MessageType>,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst dialogReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const text = action.newMessageText;\r\n\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: text }],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype SendMessageCreatorActionType = {\r\n  type: typeof SEND_MESSAGE;\r\n  newMessageText: string;\r\n};\r\n\r\nexport const sendMessageCreator = (\r\n  newMessageText: string\r\n): SendMessageCreatorActionType => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageText,\r\n});\r\n\r\nexport default dialogReducer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>\r\n  items.map((item) =>\r\n    item[objPropName] === itemId ? { ...item, ...newObjProps } : item\r\n  );\r\n","import { UsersType } from \"./../types/types\";\r\nimport { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objects-helpers\";\r\nimport { type } from \"os\";\r\n\r\nconst SET_USERS = \"react-01/users/SET_USERS\";\r\nconst FOLLOW = \"react-01/users/FOLLOW\";\r\nconst UNFOLLOW = \"react-01/users/UNFOLLOW\";\r\nconst SET_CURRENT_PAGE = \"react-01/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USER_COUNT = \"react-01/users/SET_TOTAL_USER_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"react-01/users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS =\r\n  \"react-01/users/TOGGLE_FOLLOWING_IN_PROGRESS\";\r\n\r\ntype FollowingInProgressType = {};\r\n\r\nconst initialState = {\r\n  users: [] as Array<UsersType>,\r\n  pageSize: 100,\r\n  totalUserCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<number>, // array of users id\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case SET_TOTAL_USER_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUserCount: action.totalUserCount,\r\n      };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype SetUsersActionType = {\r\n  type: typeof SET_USERS;\r\n  users: Array<UsersType>;\r\n};\r\nexport const setUsers = (users: Array<UsersType>): SetUsersActionType => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\ntype FollowSuccessActionType = {\r\n  type: typeof FOLLOW;\r\n  userId: number;\r\n};\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\n\r\ntype UnfollowSuccessActionType = {\r\n  type: typeof UNFOLLOW;\r\n  userId: number;\r\n};\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\ntype SetCurrentPageActionType = {\r\n  type: typeof SET_CURRENT_PAGE;\r\n  currentPage: number;\r\n};\r\nexport const setCurrentPage = (\r\n  currentPage: number\r\n): SetCurrentPageActionType => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\ntype SetTotalUserCountActionType = {\r\n  type: typeof SET_TOTAL_USER_COUNT;\r\n  totalUserCount: number;\r\n};\r\nexport const setTotalUserCount = (\r\n  totalUserCount: number\r\n): SetTotalUserCountActionType => ({\r\n  type: SET_TOTAL_USER_COUNT,\r\n  totalUserCount,\r\n});\r\n\r\ntype ToggleIsFetchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING;\r\n  isFetching: boolean;\r\n};\r\nexport const toggleIsFetching = (\r\n  isFetching: boolean\r\n): ToggleIsFetchingActionType => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n  type: typeof TOGGLE_FOLLOWING_IN_PROGRESS;\r\n  isFetching: boolean;\r\n  userId: number;\r\n};\r\nexport const toggleFollowingProgress = (\r\n  isFetching: boolean,\r\n  userId: number\r\n): ToggleFollowingProgressActionType => ({\r\n  type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (page: number, pageSize: number) => {\r\n  return async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await userAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUserCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch: any,\r\n  userId: number,\r\n  apiMethod: any,\r\n  actionCreator: any\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n\r\n  const response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId: number) => {\r\n  return (dispatch: any) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.follow.bind(userAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId: number) => {\r\n  return (dispatch: any) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.unfollow.bind(userAPI),\r\n      unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.6cbf411b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__1fDvj\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({\r\n  input,\r\n  meta: { touched, error },\r\n  children,\r\n  ...props\r\n}) => {\r\n  const isError = touched && error;\r\n\r\n  return (\r\n    <div className={`${styles.formControl} ${isError && styles.error}`}>\r\n      {children}\r\n      {isError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...props.input} {...props}></textarea>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...props.input} {...props}></input>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul className={classes.list}>\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/dialogs\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Messages\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/users\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/news\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            News\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/music\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Music\r\n          </NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/settings\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Settings\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { PhotosType, PostType, ProfileType } from \"./../types/types\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"react-01/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"react-01/profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"react-01/profile/SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"react-01/profile/SAVE_PHOTO_SUCCESS\";\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: 11 },\r\n    { id: 2, message: \"It's my first post.\", likesCount: 11 },\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: \"\",\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (\r\n  state = initialState,\r\n  action: any\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      };\r\n\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile };\r\n\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype AddPostActionType = {\r\n  type: typeof ADD_POST;\r\n  newPostText: string;\r\n};\r\nexport const addPost = (newPostText: string): AddPostActionType => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\n\r\ntype SetUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE;\r\n  profile: ProfileType;\r\n};\r\nexport const setUserProfile = (\r\n  profile: ProfileType\r\n): SetUserProfileActionType => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\ntype SetProfileStatusActionType = {\r\n  type: typeof SET_STATUS;\r\n  status: string;\r\n};\r\nexport const setProfileStatus = (\r\n  status: string\r\n): SetProfileStatusActionType => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\ntype SavePhotoSuccessActionType = {\r\n  type: typeof SAVE_PHOTO_SUCCESS;\r\n  photos: PhotosType;\r\n};\r\nexport const savePhotoSuccess = (\r\n  photos: PhotosType\r\n): SavePhotoSuccessActionType => ({\r\n  type: SAVE_PHOTO_SUCCESS,\r\n  photos,\r\n});\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  const response = await profileAPI.getStatus(userId);\r\n\r\n  dispatch(setProfileStatus(response.data));\r\n};\r\n\r\nexport const updateProfileStatus = (status: string) => async (\r\n  dispatch: any\r\n) => {\r\n  const response = await profileAPI.updateStatus(status);\r\n\r\n  if (response.data.resultCode === 0) dispatch(setProfileStatus(status));\r\n};\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n  const response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0)\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n};\r\n\r\nexport const saveProfileData = (profile: ProfileType) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfileData(profile);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"profileData\", { _error: response.data.messages[0] }));\r\n    return Promise.reject(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\ntype PropsType = {\r\n  status: string;\r\n  updateProfileStatus: (newStatus: string) => void;\r\n};\r\n\r\nconst ProfileStatus: React.FC<PropsType> = ({\r\n  status,\r\n  updateProfileStatus,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [newStatus, setStatus] = useState(status);\r\n\r\n  useEffect(() => setStatus(status), [status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    updateProfileStatus(newStatus);\r\n  };\r\n\r\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n\r\n    setStatus(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <p onDoubleClick={activateEditMode}>\r\n          <b>Status:</b> {status || \"------------\"}\r\n        </p>\r\n      )}\r\n      {editMode && (\r\n        <input\r\n          onChange={onStatusChange}\r\n          autoFocus={true}\r\n          onBlur={deActivateEditMode}\r\n          type=\"text\"\r\n          value={newStatus}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <li>\r\n      <a href={contactValue}>{contactTitle}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst ProfileData = ({ profile, isOwner, activateEditMode } = {}) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <button onClick={activateEditMode}>Edit</button>}\r\n      <p>\r\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </p>\r\n      <p>\r\n        <b>My profession skills:</b> {profile.lookingForAJobDescription}\r\n      </p>\r\n      <p>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </p>\r\n      <div>\r\n        <p>Contacts:</p>\r\n        <ul>\r\n          {Object.keys(profile.contacts).map((key) => (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../../common/FormControls/FormControls\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error } = {}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"fullName\">Name:</label>\r\n        <Field component={Input} type=\"text\" name=\"fullName\" id=\"fullName\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lookingForAJob\">Looking for a job:</label>\r\n        <Field\r\n          component={Input}\r\n          type=\"checkbox\"\r\n          name=\"lookingForAJob\"\r\n          id=\"lookingForAJob\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"myProfessionSkills\">My profession skills:</label>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"lookingForAJobDescription\"\r\n          rows=\"3\"\r\n          id=\"myProfessionSkills\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"aboutMe\">About me:</label>\r\n        <Field component={Textarea} name=\"aboutMe\" rows=\"3\" id={\"aboutMe\"} />\r\n      </div>\r\n      <div>\r\n        <p>Contacts:</p>\r\n        {Object.keys(profile.contacts).map((key, index) => (\r\n          <div key={key}>\r\n            <b>{key}</b>\r\n            <Field\r\n              component={Input}\r\n              name={`contacts.${key}`}\r\n              placeholder={key}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {error && <p>{error}</p>}\r\n\r\n      <button>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxProfileDataForm = reduxForm({ form: \"profileData\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ReduxProfileDataForm;\r\n","import React from \"react\";\r\nimport Loader from \"../../common/Loader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport userPic from \"../../../images/user.svg\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ReduxProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileInfo = ({\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  updateProfileStatus,\r\n  savePhoto,\r\n  saveProfileData,\r\n} = {}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPicChange = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfileData(formData).then(() => setEditMode(false));\r\n  };\r\n\r\n  return !profile ? (\r\n    <Loader />\r\n  ) : (\r\n    <section>\r\n      <div>\r\n        <h1>{profile.fullName}</h1>\r\n        <img src={profile.photos.large || userPic} width=\"250\" />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPicChange} />}\r\n        <ProfileStatus\r\n          status={status}\r\n          updateProfileStatus={updateProfileStatus}\r\n        />\r\n      </div>\r\n      {editMode ? (\r\n        <ReduxProfileDataForm\r\n          initialValues={profile}\r\n          profile={profile}\r\n          onSubmit={onSubmit}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          activateEditMode={() => setEditMode(true)}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <p>{props.message}</p>\r\n      <button>like</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../../../utils/validators\";\r\nimport { Textarea } from \"../../../common/FormControls/FormControls\";\r\n\r\nconst maxPostLength = maxLength(150);\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"New post!\"\r\n        rows=\"5\"\r\n        validate={[requiredField, maxPostLength]}\r\n      />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n};\r\nconst PostFormRedux = reduxForm({ form: \"dialogMessageForm\" })(PostForm);\r\n\r\nexport default PostFormRedux;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport PostFormRedux from \"./PostForm/PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  const postElement = props.posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} key={post.id} />\r\n  ));\r\n\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>My posts</h2>\r\n      <PostFormRedux onSubmit={addNewPost} />\r\n      {postElement}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.profilePage.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addPost: (newPostText) => {\r\n    dispatch(addPost(newPostText));\r\n  },\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport classes from \"./Profile.module.css\";\r\n\r\nconst Profile = ({\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  updateProfileStatus,\r\n  savePhoto,\r\n  saveProfileData,\r\n} = {}) => {\r\n  return (\r\n    <main className={classes.profileContainer}>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateProfileStatus={updateProfileStatus}\r\n        savePhoto={savePhoto}\r\n        saveProfileData={saveProfileData}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getProfileStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfileData,\r\n  updateProfileStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getProfileStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateProfileStatus={this.props.updateProfileStatus}\r\n        savePic={this.props.savePic}\r\n        saveProfileData={this.props.saveProfileData}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getProfileStatus,\r\n    updateProfileStatus,\r\n    savePhoto,\r\n    saveProfileData,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"react-01/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"react-01/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\nconst initialState = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isAuth: false,\r\n  captchaUrl: null as string | null, //if null then captcha is not required\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n  userId: number | null;\r\n  email: string | null;\r\n  login: string | null;\r\n  isAuth: boolean;\r\n  captchaUrl: string | null;\r\n};\r\n\r\ntype SetAuthUserDataActionType = {\r\n  type: typeof SET_USER_DATA;\r\n  payload: SetAuthUserDataActionPayloadType;\r\n};\r\n\r\nexport const setAuthUserData = (\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean,\r\n  captchaUrl: string | null\r\n): SetAuthUserDataActionType => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth, captchaUrl },\r\n});\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n  type: typeof GET_CAPTCHA_URL_SUCCESS;\r\n  payload: { captchaUrl: string };\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (\r\n  captchaUrl: string\r\n): GetCaptchaUrlSuccessActionType => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaUrl },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n  const response = await authAPI.getMyProfile();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    const { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true, null));\r\n  }\r\n};\r\n\r\nexport const login = (\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: string\r\n) => async (dispatch: any) => {\r\n  const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n\r\n    const error =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error!\";\r\n\r\n    dispatch(stopSubmit(\"login\", { _error: error }));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  const response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false, null));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src=\"https://static.dribbble.com/users/60166/screenshots/14000017/lion_logo_2x.jpg\"\r\n        className={classes.logo}\r\n      />\r\n\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} <button onClick={props.logout}>Logout</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.login,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../../utils/validators\";\r\nimport { Input } from \"../../common/FormControls/FormControls\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl } = {}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          validate={[requiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          validate={[requiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          type=\"checkbox\"\r\n          name=\"rememberMe\"\r\n          id=\"rememberMe\"\r\n        />\r\n        <label htmlFor=\"rememberMe\">Remember me</label>\r\n      </div>\r\n\r\n      {error && <p>{error}</p>}\r\n\r\n      {captchaUrl && (\r\n        <div>\r\n          <img src={captchaUrl} alt=\"captcha\" />\r\n          <Field\r\n            component={Input}\r\n            name=\"captcha\"\r\n            type=\"text\"\r\n            validate={[requiredField]}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <button>Sign in</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxLoginForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nexport default ReduxLoginForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport ReduxLoginForm from \"./LoginForm/LoginForm\";\r\n\r\nconst Login = ({ login, isAuth, captchaUrl } = {}) => {\r\n  const onSubmit = ({ email, password, rememberMe, captcha } = {}) => {\r\n    login(email, password, rememberMe, captcha);\r\n  };\r\n  return isAuth ? (\r\n    <Redirect to={\"/profile\"} />\r\n  ) : (\r\n    <section>\r\n      <h1>Login</h1>{\" \"}\r\n      <ReduxLoginForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"react-01/app/INITIALIZED_SUCCESS\";\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype InitializedSuccessActionType = {\r\n  type: typeof INITIALIZED_SUCCESS;\r\n};\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n  const promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n} = require(\"redux\");\r\n\r\nconst reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogPage: dialogReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\r\nconst { default: Loader } = require(\"../components/common/Loader\");\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Suspense fallback={<Loader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {\n  HashRouter,\n  Redirect,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport Loader from \"./components/common/Loader\";\nimport store from \"./redux/redux-store\";\nimport { compose } from \"redux\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst UsersContainer = React.lazy(() =>\n  import(\"./components/Users/UsersContainer\")\n);\nconst News = React.lazy(() => import(\"./components/News/News\"));\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Loader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />'\n        <div className=\"app-wrapper-content\">\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/profile\" />\n            <Route\n              path=\"/profile/:userId?\"\n              render={() => <ProfileContainer />}\n            />\n\n            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n\n            <Route path=\"/users\" render={withSuspense(UsersContainer)} />\n\n            <Route path=\"/news\" render={withSuspense(News)} />\n\n            <Route path=\"/music\" render={withSuspense(Music)} />\n\n            <Route path=\"/settings\" render={withSuspense(Settings)} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\n\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst AppProvider = (props) => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default AppProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppProvider from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = (value) =>\r\n  value ? undefined : \"Field is required!\";\r\n\r\nexport const maxLength = (maxLength) => (value) =>\r\n  value && value.length > maxLength\r\n    ? `Max length is ${maxLength} symbols!`\r\n    : undefined;\r\n","import React from \"react\";\r\nimport loader from \"../../images/loader.svg\";\r\n\r\nconst Loader = (props) => {\r\n  return <img src={loader} />;\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__8xliN\",\"logo\":\"Header_logo__2CYmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3O-XA\",\"error\":\"FormControls_error__3FSIr\"};"],"sourceRoot":""}