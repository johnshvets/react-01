{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","utils/objects-helpers.js","redux/users-reducer.js","images/loader.svg","api/api.js","components/Navbar/Navbar.jsx","redux/profile-reducer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","utils/validators.js","components/common/FormControls/FormControls.jsx","components/common/loader.jsx","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageText","type","dialogReducer","state","action","text","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","SET_USERS","FOLLOW","UNFOLLOW","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","getUsers","page","dispatch","a","userAPI","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","axiosInstance","require","default","create","baseURL","withCredentials","headers","get","then","response","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getMyProfile","login","email","password","rememberMe","logout","Navbar","className","classes","nav","list","to","link","activeClassName","active","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","setProfileStatus","profileReducer","newPost","newPostText","ProfileStatus","props","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateProfileStatus","ProfileInfo","src","photos","large","Post","maxPostLength","maxLength","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","rows","validate","requiredField","MyPosts","React","memo","postElement","key","console","log","values","addPost","MyPostsContainer","connect","profilePage","Profile","ProfileContainer","this","match","params","authUserId","history","push","getUserProfile","getProfileStatus","Component","compose","auth","isAuth","withRouter","SET_USER_DATA","usersId","setAuthUserData","getAuthUserData","authReducer","Header","header","logo","loginBlock","onClick","HeaderContainer","ReduxLoginForm","error","Input","class","for","length","stopSubmit","_error","initialized","appReducer","createStore","combineReducers","applyMiddleware","store","dialogPage","usersPage","formReducer","app","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","Loader","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","News","Music","Settings","App","initializeApp","path","render","AppContainer","promise","Promise","all","AppProvider","basename","process","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","undefined","FormControl","input","meta","touched","children","isError","styles","formControl","loader"],"mappings":"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","file":"static/js/main.6fdeb3e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2g0fr\",\"list\":\"Navbar_list__1h58q\",\"link\":\"Navbar_link__2Axr-\",\"active\":\"Navbar_active__23SR6\"};","const SEND_MESSAGE = \"react-01/dialogs/SEND-MESSAGE\";\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Viktor\" },\r\n    { id: 2, name: \"Valentyn\" },\r\n    { id: 3, name: \"Lesia\" },\r\n    { id: 4, name: \"Julia\" },\r\n  ],\r\n\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"!\" },\r\n  ],\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const text = action.newMessageText;\r\n\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: text }],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageText,\r\n});\r\n\r\nexport default dialogReducer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>\r\n  items.map((item) =>\r\n    item[objPropName] === itemId ? { ...item, ...newObjProps } : item\r\n  );\r\n","import { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objects-helpers\";\r\n\r\nconst SET_USERS = \"react-01/users/SET_USERS\";\r\nconst FOLLOW = \"react-01/users/FOLLOW\";\r\nconst UNFOLLOW = \"react-01/users/UNFOLLOW\";\r\nconst SET_CURRENT_PAGE = \"react-01/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USER_COUNT = \"react-01/users/SET_TOTAL_USER_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"react-01/users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS =\r\n  \"react-01/users/TOGGLE_FOLLOWING_IN_PROGRESS\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  pageSize: 100,\r\n  totalUserCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case SET_TOTAL_USER_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUserCount: action.totalUserCount,\r\n      };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\nexport const setTotalUserCount = (totalUserCount) => ({\r\n  type: SET_TOTAL_USER_COUNT,\r\n  totalUserCount,\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await userAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUserCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n\r\n  const response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.follow.bind(userAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.unfollow.bind(userAPI),\r\n      unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.6cbf411b.svg\";","const { default: Axios } = require(\"axios\");\r\n\r\nconst axiosInstance = Axios.create({\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"075321c3-51db-4d59-83c5-87a5d72d925f\",\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return axiosInstance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId) {\r\n    return axiosInstance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return axiosInstance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return axiosInstance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return axiosInstance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return axiosInstance.put(\"profile/status/\", { status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  getMyProfile() {\r\n    return axiosInstance.get(\"auth/me\");\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return axiosInstance.post(\"auth/login\", { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return axiosInstance.delete(\"auth/login\");\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul className={classes.list}>\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/dialogs\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Messages\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/users\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/news\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            News\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/music\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Music\r\n          </NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink\r\n            to=\"/settings\"\r\n            className={classes.link}\r\n            activeClassName={classes.active}\r\n          >\r\n            Settings\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"react-01/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"react-01/profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"react-01/profile/SET_STATUS\";\r\n\r\nconst initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: 11 },\r\n    { id: 2, message: \"It's my first post.\", likesCount: 11 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      };\r\n\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile };\r\n\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\n\r\nexport const setProfileStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(userId);\r\n\r\n  dispatch(setProfileStatus(response.data));\r\n};\r\n\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateStatus(status);\r\n\r\n  if (response.data.resultCode === 0) dispatch(setProfileStatus(status));\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => setStatus(props.status), [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateProfileStatus(status);\r\n  }; \r\n  \r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevProps.status !== this.props.status) {\r\n  //     this.setState({ status: this.props.status });\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <p onDoubleClick={activateEditMode}>{props.status || \"------------\"}</p>\r\n      )}\r\n      {editMode && (\r\n        <input\r\n          onChange={onStatusChange}\r\n          autoFocus={true}\r\n          onBlur={deActivateEditMode}\r\n          type=\"text\"\r\n          value={status}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport Loader from \"../../common/loader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateProfileStatus } = {}) => {\r\n  return !profile ? (\r\n    <Loader />\r\n  ) : (\r\n    <section>\r\n      <div>\r\n        <h1>Name</h1>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatus\r\n          status={status}\r\n          updateProfileStatus={updateProfileStatus}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <p>{props.message}</p>\r\n      <button>like</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../../../utils/validators\";\r\nimport { Textarea } from \"../../../common/FormControls/FormControls\";\r\n\r\nconst maxPostLength = maxLength(150);\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"New post!\"\r\n        rows=\"5\"\r\n        validate={[requiredField, maxPostLength]}\r\n      />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n};\r\nconst PostFormRedux = reduxForm({ form: \"dialogMessageForm\" })(PostForm);\r\n\r\nexport default PostFormRedux;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport PostFormRedux from \"./PostForm/PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  const postElement = props.posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} key={post.id} />\r\n  ));\r\n\r\n  const addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  console.log(\"dfjd\");\r\n  return (\r\n    <section>\r\n      <h2>My posts</h2>\r\n      <PostFormRedux onSubmit={addNewPost} />\r\n      {postElement}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.profilePage.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addPost: (newPostText) => {\r\n    dispatch(addPost(newPostText));\r\n  },\r\n});\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <main>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateProfileStatus={props.updateProfileStatus}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getProfileStatus,\r\n  getUserProfile,\r\n  updateProfileStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getProfileStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateProfileStatus={this.props.updateProfileStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getProfileStatus,\r\n    updateProfileStatus,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"react-01/auth/SET_USER_DATA\";\r\n\r\nconst initialState = {\r\n  usersId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const response = await authAPI.getMyProfile();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    const { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    const error =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error!\";\r\n    dispatch(stopSubmit(\"login\", { _error: error }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  const response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src=\"https://static.dribbble.com/users/60166/screenshots/14000017/lion_logo_2x.jpg\"\r\n        className={classes.logo}\r\n      />\r\n\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} <button onClick={props.logout}>Logout</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.login,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { requiredField } from \"../../../utils/validators\";\r\nimport { Input } from \"../../common/FormControls/FormControls\";\r\n\r\nconst LoginForm = ({ handleSubmit, error } = {}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          validate={[requiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          validate={[requiredField]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          type={\"checkbox\"}\r\n          name={\"rememberMe\"}\r\n          id={\"rememberMe\"}\r\n        />\r\n        <label class=\"checkbox-label\" for=\"rememberMe\">\r\n          Remember me\r\n        </label>\r\n      </div>\r\n      {error && <p>{error}</p>}\r\n      <button>Sign in</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxLoginForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nexport default ReduxLoginForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport ReduxLoginForm from \"./LoginForm/LoginForm\";\r\n\r\nconst Login = ({ login, isAuth } = {}) => {\r\n  const onSubmit = ({ email, password, rememberMe } = {}) => {\r\n    login(email, password, rememberMe);\r\n  };\r\n  return isAuth ? (\r\n    <Redirect to={\"/profile\"} />\r\n  ) : (\r\n    <section>\r\n      {\" \"}\r\n      <h1>Login</h1> <ReduxLoginForm onSubmit={onSubmit} />{\" \"}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"react-01/app/INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  const promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n} = require(\"redux\");\r\n\r\nconst reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogPage: dialogReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\r\nconst { default: Loader } = require(\"../components/common/loader\");\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Suspense fallback={<Loader />}>\r\n        <Component {...props} />\r\n      </Suspense>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport Loader from \"./components/common/loader\";\nimport store from \"./redux/redux-store\";\nimport { compose } from \"redux\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst UsersContainer = React.lazy(() =>\n  import(\"./components/Users/UsersContainer\")\n);\nconst News = React.lazy(() => import(\"./components/News/News\"));\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Loader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n\n          <Route path=\"/users\" render={withSuspense(UsersContainer)} />\n\n          <Route path=\"/news\" render={withSuspense(News)} />\n\n          <Route path=\"/music\" render={withSuspense(Music)} />\n\n          <Route path=\"/settings\" render={withSuspense(Settings)} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\n\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst AppProvider = (props) => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default AppProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppProvider from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = (value) =>\r\n  value ? undefined : \"Field is required!\";\r\n\r\nexport const maxLength = (maxLength) => (value) =>\r\n  value && value.length > maxLength\r\n    ? `Max length is ${maxLength} symbols!`\r\n    : undefined;\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({\r\n  input,\r\n  meta: { touched, error },\r\n  children,\r\n  ...props\r\n}) => {\r\n  const isError = touched && error;\r\n\r\n  return (\r\n    <div className={`${styles.formControl} ${isError && styles.error}`}>\r\n      {children}\r\n      {isError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...props.input} {...props}></textarea>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...props.input} {...props}></input>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport loader from \"../../images/loader.svg\";\r\n\r\nconst Loader = (props) => {\r\n  return <img src={loader} />;\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__8xliN\",\"logo\":\"Header_logo__2CYmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3O-XA\",\"error\":\"FormControls_error__3FSIr\"};"],"sourceRoot":""}